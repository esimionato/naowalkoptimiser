##############################
#
# WELCOME
#
# This is the main cmake configuration file
# associated with your project
# You can define specific compilation options here
#
# More about cmake : www.cmake.org

# This file was generated by Aldebaran Robotics ModuleGenerator


############################ PROJECT NAME
PROJECT( WALKOPTIMISER )




############################ DEFINITION
# Add definitions needed here
ADD_DEFINITIONS( ${ALCOMMON_DEFINITIONS} ${PTHREAD_DEFINITIONS} ${TINYXML_DEFINITIONS} ${BOOST_DEFINITIONS})




############################ INCLUDE DIRECTORY
# Define include directories here
INCLUDE_DIRECTORIES( ${PROXIES_INCLUDE_DIR} ${ALCOMMON_INCLUDE_DIR} ${PTHREAD_INCLUDE_DIR}  ${TINYXML_INCLUDE_DIR}  ${BOOST_INCLUDE_DIR})




############################ PROJECT SOURCES FILES
# Add source files needed to compile this project
SET(WALKOPTIMISER_SRCS

#<FILES> don't remove this comment
Locomotion/Walk/jwalk.cpp Locomotion/Walk/jwalk.h

Globals.h Globals.cpp
Parse.h Parse.cpp

jwalkoptimiser.h jwalkoptimiser.cpp
optimiser.h optimiser.cpp

# Locomotion Directory
    Locomotion/script.cpp Locomotion/script.h

# Locomotion/Walk Directory
    Locomotion/Walk/jwalkincludes.h Locomotion/Walk/alproxies.h
    Locomotion/Walk/walkprimitive.cpp Locomotion/Walk/walkprimitive.h
    Locomotion/Walk/alwalk.cpp Locomotion/Walk/alwalk.h
    Locomotion/Walk/nuwalk.cpp Locomotion/Walk/nuwalk.h
    Locomotion/Walk/step.cpp Locomotion/Walk/step.h
    Locomotion/Walk/jwalkthread.cpp Locomotion/Walk/jwalkthread.h
    Locomotion/Walk/sensors.cpp Locomotion/Walk/sensors.h
    Locomotion/Walk/actuators.cpp Locomotion/Walk/actuators.h
    Locomotion/Walk/pidcontroller.cpp Locomotion/Walk/pidcontroller.h

# Network Directory
    Network/Network.cpp Network/Network.h
    Network/UdpPort.cpp Network/UdpPort.h
    Network/thread.cpp  Network/thread.h

# Kinematics Directory
   Kinematics/Kinematics.h Kinematics/Kinematics.cpp
   Kinematics/KinematicTools.h Kinematics/KinematicTools.cpp
   Kinematics/Matrix.h Kinematics/Matrix.cpp

#</FILES> don't remove this comment

    walkoptimiser.cpp walkoptimiser.h 
  )



############################ CHECK LIBRARY / EXECUTABLE OPTION

IF( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "walkoptimiser is compiled as a dynamic object" )
    ADD_LIBRARY( walkoptimiser SHARED ${WALKOPTIMISER_SRCS} )
ELSE( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "walkoptimiser is compiled as a remote object" )
    ADD_EXECUTABLE( walkoptimiser ${WALKOPTIMISER_SRCS} )
ENDIF( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )




############################ SET LIBRARIES TO LINK WITH
TARGET_LINK_LIBRARIES( walkoptimiser ${ALCOMMON_LIBRARIES} ${PTHREAD_LIBRARIES} ${NEWMAT_LIBRARIES}  ${TINYXML_LIBRARIES} ${BOOST_LIBRARIES})

############################ BINARY COPY
# copy binaries in the output folder automatically
GET_TARGET_PROPERTY( WALKOPTIMISER_LOCATION walkoptimiser LOCATION)


IF ( WIN32 )
    STRING(REGEX REPLACE "walkoptimiser.dll" "" WALKOPTIMISER_LOCATION_SRC ${WALKOPTIMISER_LOCATION})
    SET (OUTPUT_ROOT_DIR_LIB ${AL_DIR}/modules/lib/ )
    FILE(TO_NATIVE_PATH ${WALKOPTIMISER_LOCATION_SRC} WALKOPTIMISER_LOCATION_SRC)
    FILE(TO_NATIVE_PATH ${OUTPUT_ROOT_DIR_LIB} OUTPUT_ROOT_DIR_LIB)
ENDIF ( WIN32 )


IF( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )

IF (WIN32)
	  ADD_CUSTOM_COMMAND(
	    TARGET walkoptimiser
	    POST_BUILD
	    COMMAND echo ${WALKOPTIMISER_LOCATION_SRC}*
    	    COMMAND echo ${OUTPUT_ROOT_DIR_LIB}
	    COMMAND xcopy  ${WALKOPTIMISER_LOCATION_SRC}*.dll ${OUTPUT_ROOT_DIR_LIB} /Y /C
	  )
ELSE (WIN32)

  ADD_CUSTOM_COMMAND(
    TARGET walkoptimiser
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${WALKOPTIMISER_LOCATION}
    ${OUTPUT_ROOT_DIR_LIB}
  )
 ENDIF (WIN32)
 ELSE( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )
  ADD_CUSTOM_COMMAND(
    TARGET walkoptimiser
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${WALKOPTIMISER_LOCATION}
    ${OUTPUT_ROOT_DIR_EXE}
  )
ENDIF( WALKOPTIMISER_IS_REMOTE STREQUAL "OFF" )



